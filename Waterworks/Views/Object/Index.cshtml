@model PaginatedList<Waterworks.Models.View.Client.BasicCreateObjectViewModel>

@{
    ViewData["Title"] = "Kartoteka obiektów";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Kartoteka obiektów</h2>
<hr />
<form asp-controller="Object" asp-action="Index" method="get">
    <div class="form-inline">
        <select class="form-control form-control-sm" id="exampleFormControlSelect1" name="currentCategory">
            <option value="Id">Id</option>
            <option value="IdKlienta">Id Klienta</option>
            <option value="KodPocztowy">Kod Pocztowy</option>
            <option value="Miejscowosc">Miejscowość</option>
            <option value="NrDomu">Nr Domu</option>
            <option value="NrLokalu">Nr Lokalu</option>
            <option value="NrDzialki">Nr Działki</option>
            <option value="Ulica">Ulica</option>
            <option value="Poczta">Poczta</option>
            <option value="SposobRozliczenia">Sposob Rozliczenia</option>
        </select>
        <input class="form-control form-control-sm" type="text" name="searchString">
        <input type="submit" value="Wyszukaj" class="btn btn-primary" />
        <a asp-action="Index" asp-controller="Map" class="btn btn-primary">Dodaj obiekt</a>
    </div>
</form>
<br />
<div id="modal-placeholder"></div>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParam"]">Id</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ClientIdSortParam"]">Id klienta</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PayoffSortParam"]">Sposób rozliczenia</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CitySortParam"]">Miejscowosc</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PostalCodeSortParam"]">Kod Pocztowy</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["HouseNumberSortParam"]">Nr Domu</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StreetSortParam"]">Ulica</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ApartmentNumberSortParam"]">Nr lokalu</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PlotNumberSortParam"]">Nr działki</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PostSortParam"]">Poczta</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumerKlienta)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SposobRozliczenia)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Miejscowosc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.KodPocztowy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NrDomu)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ulica)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NrLokalu)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NrDzialki)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Poczta)
                </td>
                <td>
                    @Html.ActionLink("Szczegóły", "AdvancedDetails", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-currentCategory="@ViewData["CurrentCategory"]"
   class="btn btn-default @prevDisabled">
    Poprzedni
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-currentCategory="@ViewData["CurrentCategory"]"
   class="btn btn-default @nextDisabled">
    Następny
</a>